@page "/change-password"

@using DataLibrary.Models;
@using ToDoListWithUsersBlazor.Services;
@inject UserServiceUi userService;
@inject NavigationManager navigationManager;

@if (User != null)
{
    <h3>Change Password for user '@User.Username'</h3>

    <EditForm Model="@User" OnValidSubmit="@EditPassword">
        <DataAnnotationsValidator />
        <div class="form-group row">
            <div class="form-group col">
                <label for="oldPassword">Old Password</label>
                <InputText type="password" id="oldPassword" @bind-Value="User.OldPassword" class="form-control" />
            </div>
        </div>

        <br />

        <div class="form-group row">
            <div class="form-group col">
                <label for="newPassword">New Password</label>
                <InputText type="password" id="firstName" @bind-Value="User.Password" class="form-control" />
                <ValidationMessage For="@(() => User.Password)" />
            </div>
            <div class="form-group col">
                <label for="confirmPassword">Confirm Password</label>
                <InputText type="password" id="confirmPassword" @bind-Value="User.ConfirmPassword" class="form-control" />
                <ValidationMessage For="@(() => User.ConfirmPassword)" />
            </div>
        </div>

        <br />

        <div class="form-group row">
            <div class="form-group col">
                <button class="btn btn-warning">Change Password</button>
                <button type="reset" @onclick="@(() => navigationManager.NavigateTo("/settings"))" @onclick:preventDefault class="btn btn-secondary">Cancel</button>
            </div>
        </div>
    </EditForm>
}

@code {
    public UserModel? User { get; set; } = new();
    public string NewPassword { get; set; } = "";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            User = await userService.GetUser();
            User.Password = "";
        }
        catch (Exception)
        {
            User = null;
        }
    }

    public async Task EditPassword()
    {
        await userService.ChangePassword(User);
        navigationManager.NavigateTo("/settings", true);
    }
}
