@page "/list"

@using DataLibrary.Enums;
@using DataLibrary.Models;
@using ToDoListWithUsersBlazor.Pages.TaskPages
@using ToDoListWithUsersBlazor.Services;
@inject TaskListServiceUi listService;
@inject TaskServiceUi taskService;
@inject UserServiceUi userService;
@inject NavigationManager navigationManager;



@if (ThisList != null || Tasks != null || User != null)
{
    <div class="d-flex flex-column align-items-center">
        <h3 class="text-white">List title: @ThisList.Title</h3>
    </div>
    <div class="d-flex flex-colum">
        <div class="p-2 m-2 w-100 border-5 bg-opacity-25 rounded-3 d-flex flex-column flex-wrap justify-content-between align-self-center overflow-scroll " style="background-color: gold; scrollbar-width: none;">
            <CreateTask OnTaskCreated="@TaskCreated"></CreateTask>
            <hr class="opacity-75 rounded-pill"/>
            <SortListTasks ThisList="@ThisList" OnSortChanged="@SortChanged"></SortListTasks>
            <hr class="opacity-75 rounded-pill" />
            <ListTasks Tasks="@Tasks" User="@User"></ListTasks>
        </div>
    </div>

    <p class="text-danger">@errorMessage</p>
}

<style>
   

</style>

@code {
    [Parameter]
    public TaskListModel? ThisList { get; set; }

    [Parameter]
    public UserModel? User { get; set; }

    [Parameter]
    public List<TaskModel>? Tasks { get; set; }

    private string errorMessage { get; set; } = "";

    public async Task TaskCreated()
    {
        Tasks = await taskService.GetTasks();
        ThisList = await listService.GetList(CurrentActive.Id["ListId"]);
    }

    public async Task SortChanged()
    {
        Tasks = await taskService.GetTasks();
        ThisList = await listService.GetList(CurrentActive.Id["ListId"]);
    }
}
