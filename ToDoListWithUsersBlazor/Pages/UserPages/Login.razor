@page "/login"

@inject UserServiceUi userService
@using System.Text;
@using System.Text.Json;
@using DataLibrary.Models;
@using DataLibrary;
@using ToDoListWithUsersBlazor.Services;
@inject NavigationManager navigationManager

<div class="d-flex w-100 justify-content-center">
    <div class="d-flex flex-column gap-4 w-50 p-4 rounded-3" style="background-color: rgb(200, 200, 200)">
        <h3 class="text-center">Login</h3>

        <EditForm Model="@user" OnSubmit="@LoginUser">
            <DataAnnotationsValidator />
            <p class="text-danger">@errorMessage</p>

            <div class="form-group row">
                <div class="form-group col">
                    <label for="username">Username</label>
                    <InputText id="username" @bind-Value="user.Username" class="form-control" />
                    <ValidationMessage For="@(() => user.Username)" />
                </div>
                <div class="form-group col">
                    <label for="password">Password</label>
                    <InputText type="password" id="password" @bind-Value="user.Password" class="form-control" />
                    <ValidationMessage For="@(() => user.Password)" />
                </div>
            </div>

            <br />
            <div class="form-group row">
                <div class="form-group col d-flex justify-content-center gap-2">
                    <button type="submit" class="btn btn-warning" @onclick="ConfirmPassword" style="width: 100px;">Login</button>
                    <button type="reset" @onclick="@(() => navigationManager.NavigateTo("/"))" @onclick:preventDefault class="btn btn-secondary" style="width: 100px;">Cancel</button>
                </div>
            </div>

        </EditForm>
    </div>
</div>

@code {
    private UserModel? user = new();
    private string errorMessage = "";

    public async Task LoginUser()
    {
        try
        {
            user = await userService.Login(user);
        }
        catch (Exception)
        {
            errorMessage = "Incorrect username or password, try again.";
            return;
        }

        navigationManager.NavigateTo("/", true);
    }

    public void ConfirmPassword()
    {
        user.ConfirmPassword = user.Password;
    }
}
