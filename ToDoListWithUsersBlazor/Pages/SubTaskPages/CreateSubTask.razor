@page "/create-sub-task"

@inject SubTaskServiceUi subTaskService
@using System.Text;
@using System.Text.Json;
@using DataLibrary.Enums;
@using DataLibrary.Models;
@using ToDoListWithUsersBlazor.Services;
@inject NavigationManager navigationManager

<p class="text-danger">@errorMessage</p>
<EditForm Model="@newSubTask" OnValidSubmit="@Create">
    <DataAnnotationsValidator />
    <div class="form-group row">
        <div class="form-group col">
            <InputText placeholder="Title..." id="title" @bind-Value="newSubTask.Title" class="form-control" />
            <ValidationMessage For="@(() => newSubTask.Title)" />
        </div>

        <div class="form-group col">
            <InputText placeholder="Description..." id="description" @bind-Value="newSubTask.Description" class="form-control" />
            <ValidationMessage For="@(() => newSubTask.Description)" />
        </div>
    </div>

    <br />

    <div class="form-group row">
        <div class="form-group col">
            <button type="submit" class="btn btn-success oi oi-plus" style="height: 40px; width: 40px"></button>
            <button type="reset" class="btn btn-outline-danger oi oi-x" style="height: 40px; width: 40px"></button>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public EventCallback<List<TaskListModel>> OnSubTaskCreated { get; set; }

    [Parameter]
    public TaskModel Task { get; set; }

    private SubTaskModel newSubTask = new();
    private string errorMessage = "";


    public async Task Create()
    {
        try
        {
            newSubTask.TaskId = Task.Id;
            await subTaskService.CreateSubTask(newSubTask);
        }
        catch (Exception)
        {
            errorMessage = "Sub Task already exists in this task.";
            return;
        }
        newSubTask = new();
        await OnSubTaskCreated.InvokeAsync();
    }

}
